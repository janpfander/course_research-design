{
  "hash": "8a79c475d74cb85b88c3407fdc1fd698",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Problem set 2\"\nauthor: \"Put your name here\"\nformat: \n  html:\n    toc: true\n  pdf:\n    toc: true\n  docx:\n    toc: true\n---\n\n\n\n\n\n\n\n\n### Getting started\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(janitor)\n```\n:::\n\n\n\n\n\n\n\n\n### Read the data\n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 195 Columns: 9\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (1): Breed\ndbl (8): 2013 Rank, 2014 Rank, 2015 Rank, 2016 Rank, 2017 Rank, 2018 Rank, 2...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\nRows: 195 Columns: 17\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr  (3): Breed, Coat Type, Coat Length\ndbl (14): Affectionate With Family, Good With Young Children, Good With Othe...\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbreed_rank <- read_csv(\"data/breed_rank.csv\")\nbreed_traits <- read_csv(\"data/breed_traits.csv\")\n```\n:::\n\n\n\n\n\n\n\n\n### Clean the data\n\nDisplay variables.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nnames(breed_rank)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Breed\"     \"2013 Rank\" \"2014 Rank\" \"2015 Rank\" \"2016 Rank\" \"2017 Rank\"\n[7] \"2018 Rank\" \"2019 Rank\" \"2020 Rank\"\n```\n\n\n:::\n\n```{.r .cell-code}\nnames(breed_traits)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] \"Breed\"                      \"Affectionate With Family\"  \n [3] \"Good With Young Children\"   \"Good With Other Dogs\"      \n [5] \"Shedding Level\"             \"Coat Grooming Frequency\"   \n [7] \"Drooling Level\"             \"Coat Type\"                 \n [9] \"Coat Length\"                \"Openness To Strangers\"     \n[11] \"Playfulness Level\"          \"Watchdog/Protective Nature\"\n[13] \"Adaptability Level\"         \"Trainability Level\"        \n[15] \"Energy Level\"               \"Barking Level\"             \n[17] \"Mental Stimulation Needs\"  \n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nMake better names.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbreed_traits <- breed_traits |> \n  clean_names()\n```\n:::\n\n\n\n\n\n\n\n\n### Manipulate the data using `dplyr`\n\nMaka a summary. \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbreed_traits |> \n  group_by(shedding_level) |> \n  summarise(n = n())\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 × 2\n  shedding_level     n\n           <dbl> <int>\n1              0     1\n2              1    27\n3              2    41\n4              3   109\n5              4    16\n6              5     1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nFilter the shedding_level 0. \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbreed_traits <- breed_traits |> \n  filter(shedding_level != 0)\n```\n:::\n\n\n\n\n\n\n\n\nCheck if manipulation was successful. \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbreed_traits |> count(shedding_level)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 5 × 2\n  shedding_level     n\n           <dbl> <int>\n1              1    27\n2              2    41\n3              3   109\n4              4    16\n5              5     1\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\nMake an untidy data frame.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuntidy_scores <- breed_traits |> \n  mutate(untidy_score = shedding_level + \n           coat_grooming_frequency + drooling_level) |> \n  select(breed, untidy_score)\n```\n:::\n\n\n\n\n\n\n\n\nArrange scores in descending order.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nuntidy_scores |> \n  arrange(desc(untidy_score))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 194 × 2\n   breed                  untidy_score\n   <chr>                         <dbl>\n 1 Bernese Mountain Dogs            11\n 2 Leonbergers                      11\n 3 Newfoundlands                    10\n 4 Bloodhounds                      10\n 5 St. Bernards                     10\n 6 Old English Sheepdogs            10\n 7 Dogues de Bordeaux               10\n 8 Neapolitan Mastiffs              10\n 9 Black Russian Terriers           10\n10 Tibetan Mastiffs                 10\n# ℹ 184 more rows\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n### Tidying the data\n\nHow does this this data set fail to meet the criteria for tidy data?\n\nThere are three interrelated rules which make a dataset tidy:\n\n1. Each variable must have its own column.\n2. Each observation must have its own row.\n3. Each value must have its own cell.\n\nWe have a year and a rank variable, but neither of these variables have their own column. Shown above is one observation, by dog breed. But that \"one\" observation is actually eight separate observations: the rank in 2013, the rank in 2014, etc. Each observation needs to have its own row.\n\nMake pivoted data with a year and a rank variable.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranks_pivoted <- breed_rank |> \n  pivot_longer(`2013 Rank`:`2020 Rank`,\n               names_to = \"year\",\n               values_to = \"rank\")\n```\n:::\n\n\n\n\n\n\n\n\nRename breed and make the year variable numeric.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranks_pivoted <- ranks_pivoted |> \n  rename(breed = Breed) |> \n  mutate(year = parse_number(year))\n```\n:::\n\n\n\n\n\n\n\n\nFilter data to only Bernese Mountain Dogs.\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranks_pivoted <- ranks_pivoted |> \n  filter(str_detect(breed, \"Bernese\")) \n```\n:::\n\n\n\n\n\n\n\n\nPlot rankings across time. \n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nranks_pivoted |>\n  ggplot(aes(x = year, y = rank, label = rank)) +\n  geom_point(size = 3) +\n  geom_text(vjust = 2)\n```\n\n::: {.cell-output-display}\n![](02-solution_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "02-solution_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}