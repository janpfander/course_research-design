{
  "hash": "590cc9096621eac7c98e2b1754c8924a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Problem set 3\"\nauthor: \"Put your name here\"\nformat: \n  html:\n    toc: true\n  pdf:\n    toc: true\n  docx:\n    toc: true\n---\n\n\n\n\n\n\n\n\n3. Read in the separate data files. Make sure you have the `tidyverse` package loaded. \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# load packages\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.1     ✔ tibble    3.2.1\n✔ lubridate 1.9.3     ✔ tidyr     1.3.1\n✔ purrr     1.0.2     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Load the separate datasets\nfellowship <- read_csv(\"../data/The_Fellowship_Of_The_Ring.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Film, Species\ndbl (2): Female, Male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\ntt <- read_csv(\"../data/The_Two_Towers.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Film, Species\ndbl (2): Female, Male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\nrotk <- read_csv(\"../data/The_Return_Of_The_King.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 3 Columns: 4\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (2): Film, Species\ndbl (2): Female, Male\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n4. Use the `bind_rows` function to merge the three data sets into a single data set. We haven't seen this function yet, look it up. Call the new merged data frame `lotr` (for \"lord of the rings\").\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# bind_rows() stacks data frames on top of each other\nlotr <- bind_rows(fellowship, tt, rotk) \n```\n:::\n\n\n\n\n\n\n\n\n5. We later want to plot gender differences. Have a look at the data. Why is it not yet in a tidy format? Explain. Then use `pivot_longer` to reshape the data frame by adding two new variables, `Gender` and `Words`, to the data frame. \n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Make this wide data tidy\nlotr <- lotr |> \n  # This is the new way to make data long\n  pivot_longer(cols = c(Female, Male), \n               names_to = \"Gender\", values_to = \"Words\")\n```\n:::\n\n\n\n\n\n\n\n\n6. Does a certain gender dominate a movie? (Hint: Make a new summary data frame for which you group by `Gender` and then count sum the words.)\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- lotr |> \n  group_by(Gender) |> \n  summarise(Words = sum(Words))\n```\n:::\n\n\n\n\n\n\n\n\n7. Graph your summarized data. (Hint: use `geom_col` and the `Words` and `Gender` variables.)\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summary_data, \n       aes(x = Gender, y = Words)) +\n  geom_col()\n```\n\n::: {.cell-output-display}\n![](03-solution_files/figure-docx/unnamed-chunk-6-1.png)\n:::\n:::\n\n\n\n\n\n\n\n8. You've just plotted the averages across films. (Hint: Make a new summary data frame for which you group by both `Gender` and `Film` and then count sum the words.)\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- lotr |> \n  group_by(Gender, Film) |> \n  summarise(Words = sum(Words))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'Gender'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n:::\n\n\n\n\n\n\n\n\n9. Try to make a new plot in which you differentiate between the different films (Hint: use faceting by `Gender` or `Film`).\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summary_data, \n       aes(x = Gender, y = Words)) +\n  geom_col() + \n  facet_wrap(vars(Film))\n```\n\n::: {.cell-output-display}\n![](03-solution_files/figure-docx/unnamed-chunk-8-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n10. How about species? Does the dominant species differ on average (don't differentiate between the three movies here)? (Hint: Proceed just as for `Gender` in the beginning: make a new summary data frame for which you group by `Species` and then count sum the words.)\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary_data <- lotr |> \n  group_by(Species) |> \n  summarise(Words = sum(Words))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(summary_data, \n       aes(x = Species, y = Words)) +\n  geom_col() \n```\n\n::: {.cell-output-display}\n![](03-solution_files/figure-docx/unnamed-chunk-10-1.png)\n:::\n:::\n\n\n\n\n\n\n\n\n11. Create a plot that visualizes the number of words spoken by species, gender, and film simultaneously. Use the complete tidy `lotr` data frame. You don't need to create a new summarized dataset (with `group_by(Species, Gender, Film)`) because the original data already has a row for each of those (you could make a summarized dataset, but it would be identical to the full version).\n\nYou need to show `Species`, `Gender`, and `Film` at the same time, but you only have two possible aesthetics (`x` and `fill`), so you'll also need to facet by the third. Play around with different combinations (e.g. try `x = Species`, then `x = Film`) until you find one that tells the clearest story. For fun, add a `labs()` layer to add a title and subtitle and caption.\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(lotr, \n       aes(x = Species, y = Words, fill = Gender)) +\n  geom_col() + \n  facet_wrap(vars(Film))\n```\n\n::: {.cell-output-display}\n![](03-solution_files/figure-docx/unnamed-chunk-11-1.png)\n:::\n:::\n",
    "supporting": [
      "03-solution_files/figure-docx"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": null,
    "postProcess": false
  }
}