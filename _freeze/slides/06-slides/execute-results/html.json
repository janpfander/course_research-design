{
  "hash": "1cbdd50b5728d0c202e0cd94530dd543",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Statistical Power\"\nformat: \n  revealjs:\n    theme: simple\n    smaller: true\n    slide-number: true\n    chalkboard: true\n    history: false\nexecute:\n  echo: false  # Hide code by default\n---\n\n::: {.cell}\n\n:::\n\n\n\n## Overview\n\n::::: columns\n::: {.column style=\"font-size: smaller;\"}\n1.  **The Central Limit Theorem revisited**\n\n2.  **From Null worlds to True effect worlds**\n\n3.  **Statistical power**\n\n4.  **A power simulation**\n\n:::\n\n::: {.column style=\"font-size: smaller;\"}\n\n:::\n:::::\n\n# The Central Limit Theorem revisited\n\n---\n\n## Are action movies better than comedies?\n\nIn the previous session on hypothesis testing, we invented a null world:\n\nWe simulated a population of 1'000'000 movies with no difference.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234) # For reproducibility\n\nimaginary_movies_null <- tibble(\n  movie_id = 1:1000000,\n  rating = sample(seq(1, 10, by = 0.1), size = 1000000, replace = TRUE),\n  genre = sample(c(\"Comedy\", \"Action\"), size = 1000000, replace = TRUE)\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n\n---\n\n## Sampling distribution\n\nWe randomly drew 1,000 samples from this population and calculated the difference between action movies and comedies for each.\n\nWe called the distribution of the differences from the different samples the **sampling distribution**\n\nOur sample size was always the same: 20,000. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_simulations <- 1000\ndifferences <- c() # make an empty vector\nsample_size <- 20000\n\nfor (i in 1:n_simulations) {\n  # draw a sample of 20'000 films\n  imaginary_sample <- imaginary_movies |> \n    sample_n(sample_size)\n  # compute rating difference in the sample\n  estimate <- imaginary_sample |> \n    group_by(genre) |> \n    summarize(avg_rating = mean(rating)) |> \n    summarise(diff = avg_rating[genre == \"Action\"] - avg_rating[genre == \"Comedy\"]) %>%\n    pull(diff)\n  \n  differences[i] <- estimate\n}\n```\n:::\n\n\n\n---\n\n## The Central Limit Theorem *(part I)*\n\nThe sampling distribution approximates the shape of a normal distribution\n\n:::: r-stack\n\n:::{.fragment .fade-out fragment-index=\"3\"}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-5-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::{.fragment .fade-in fragment-index=\"3\"}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::: \n\n--- \n\n## The Central Limit Theorem *(part II)*\n\n. . .\n\nThis is what the sampling distribution looks like with samples of size 10,000\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n--- \n\n## The Central Limit Theorem *(part II)*\n\nAnd with samples of size 1,000\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n--- \n\n## The Central Limit Theorem *(part II)*\n\nThe smaller the sample, the larger the standard deviation of the sampling distribution\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## How is this relevant for hypothesis testing?\n\nImagine we find an effect of -0.2 in our sample \n\n---\n\nIn a sample based on 20'000 movies, that seems reasonably unlikely in a Null world\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n\n---\n\nBut the same effect in a sample of 1000 seems not so unlikely...\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n--- \n\n## The Central Limit Theorem \n\n*(part I)*\n\n- The sampling distribution approximates the shape of a normal distribution\n\n*(part II)*\n\n- The smaller the sample, the larger the standard deviation of the sampling distribution\n\n# From Null worlds to True effect worlds\n\n---\n\nFor example, let's imagine a world where the true difference between action and comedy movies is -0.2\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Generate Comedy and Action movie ratings using truncated normal distributions\nimaginary_movies_true <- tibble(\n  movie_id = 1:1000000,\n  genre = sample(c(\"Comedy\", \"Action\"), size = 1000000, replace = TRUE),\n  rating = ifelse(\n    genre == \"Comedy\",\n    rtruncnorm(1000000, a = 1, b = 10, mean = 6.0, sd = 2), \n    rtruncnorm(1000000, a = 1, b = 10, mean = 5.8, sd = 2)   \n  )\n)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n---\n\nLet's plot the population data\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Compute means\nmeans <- imaginary_movies_true |> \n  group_by(genre) |> \n  summarize(mean_rating = mean(rating)) |> \n  # Adjust vertical placement for text labels\n  mutate(label_y = c(0.08, 0.06)) \n\n# Plot\nggplot(imaginary_movies_true, aes(x = rating, fill = genre)) +\n  geom_histogram(aes(y = ..density..), bins = 30, alpha = 0.5, position = \"identity\") +\n  scale_fill_viridis_d(option = \"plasma\", begin = 0.2, end = 0.8) +  # Viridis color scale\n  scale_color_viridis_d(option = \"plasma\", begin = 0.2, end = 0.8) +  # Viridis color scale\n  geom_vline(data = means, aes(xintercept = mean_rating, color = genre), \n             linetype = \"dashed\", size = 1, show.legend = FALSE) +  # Remove color legend for lines \n  geom_text(data = means, aes(x = mean_rating, y = label_y, label = round(mean_rating, 2)),\n            hjust = -0.1, fontface = \"bold\") +  # Adjusted position to avoid overlap\n  labs(title = \"Distribution of Movie Ratings by Genre\",\n       x = \"Rating\",\n       y = \"Density\",\n       fill = \"Genre\") +\n  theme_minimal() \n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n---\n\nðŸŽ‰ It worked, we see our imagined effect of ~ -0.2\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-fold=\"true\"}\n# Compute means\nmeans <- imaginary_movies_true |> \n  group_by(genre) |> \n  summarize(mean_rating = mean(rating)) |> \n  # Adjust vertical placement for text labels\n  mutate(label_y = c(0.08, 0.06)) \n\n# Plot\nggplot(imaginary_movies_true, aes(x = rating, fill = genre)) +\n  geom_histogram(aes(y = ..density..), bins = 30, alpha = 0.5, position = \"identity\") +\n  scale_fill_viridis_d(option = \"plasma\", begin = 0.2, end = 0.8) +  # Viridis color scale\n  scale_color_viridis_d(option = \"plasma\", begin = 0.2, end = 0.8) +  # Viridis color scale\n  geom_vline(data = means, aes(xintercept = mean_rating, color = genre), \n             linetype = \"dashed\", size = 1, show.legend = FALSE) +  # Remove color legend for lines \n  geom_text(data = means, aes(x = mean_rating, y = label_y, label = round(mean_rating, 2)),\n            hjust = -0.1, fontface = \"bold\") +  # Adjusted position to avoid overlap\n  labs(title = \"Distribution of Movie Ratings by Genre\",\n       x = \"Rating\",\n       y = \"Density\",\n       fill = \"Genre\") +\n  theme_minimal() \n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n--- \n\nImagine we look at a sample of 1000 movie ratings. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_simulations <- 1000\ndifferences <- c() # make an empty vector\nsample_size <- 1000\n\nfor (i in 1:n_simulations) {\n  # draw a sample of 20'000 films\n  imaginary_sample <- imaginary_movies |> \n    sample_n(sample_size)\n  # compute rating difference in the sample\n  estimate <- imaginary_sample |> \n    group_by(genre) |> \n    summarize(avg_rating = mean(rating)) |> \n    summarise(diff = avg_rating[genre == \"Action\"] - avg_rating[genre == \"Comedy\"]) %>%\n    pull(diff)\n  \n  differences[i] <- estimate\n}\n```\n:::\n\n\n\n---\n\nThis is what our sampling distribution would look like\n\n:::: r-stack\n\n:::{.fragment}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-17-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::{.fragment}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::{.fragment}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n---\n\nNow imagine we do a hypothesis test. \n\nWe can simulate both a null world and a true effect world (so far, nothing new)\n\n::::: columns\n::: {.column}\n\n**Null world**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Null world population\nimaginary_movies_null <- tibble(\n  movie_id = 1:1000000,\n  rating = sample(seq(1, 10, by = 0.1), size = 1000000, replace = TRUE),\n  genre = sample(c(\"Comedy\", \"Action\"), size = 1000000, replace = TRUE)\n)\n```\n:::\n\n\n\n:::\n\n::: {.column style=\"font-size: smaller;\"}\n\n**True effect world**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# True effect world population\nimaginary_movies_true <- tibble(\n  movie_id = 1:1000000,\n  genre = sample(c(\"Comedy\", \"Action\"), size = 1000000, replace = TRUE),\n  rating = ifelse(\n    genre == \"Comedy\",\n    rtruncnorm(1000000, a = 1, b = 10, mean = 6.0, sd = 2), \n    rtruncnorm(1000000, a = 1, b = 10, mean = 5.8, sd = 2)   \n  )\n)\n```\n:::\n\n\n\n:::\n\n:::::\n\n---\n\nAnd make a sampling distribution with sample size 1000 for both worlds (also nothing new)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_simulations <- 1000\ndifferences <- c() # make an empty vector\nsample_size <- 1000\n\ndata <- imaginary_movies_true # replace with imaginary_movies_null\n\nfor (i in 1:n_simulations) {\n  # draw a sample of films\n  imaginary_sample <- data |> \n    sample_n(sample_size)\n  # compute rating difference in the sample\n  estimate <- imaginary_sample |> \n    group_by(genre) |> \n    summarize(avg_rating = mean(rating)) |> \n    summarise(diff = avg_rating[genre == \"Action\"] - avg_rating[genre == \"Comedy\"]) %>%\n    pull(diff)\n  \n  differences[i] <- estimate\n}\n```\n:::\n\n::: {.cell}\n\n:::\n\n\n\n---\n\nWe can plot both simulated worlds together. \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n---\n\nLet's bring both worlds on the scale of a standard normal distribution, dividing their respective standard deviation\n\n:::: r-stack\n\n:::{.fragment}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::{.fragment}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n---\n\nWith a sample size of 1000, in many cases, we would say: \"This could have occurred in a Null World\"\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Two errors\n\n![](images/two_errors.jpg){fig-align=\"center\" width=\"800\"}\n\n::: {.absolute left=\"5%\" top=\"55%\" style=\"font-size:1.8em; padding: 0.5em 1em; background-color: rgba(255, 255, 255, .5); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .5); border-radius: 5px;\" .fragment}\nHypothesis Testing\n:::\n\n::: {.absolute left=\"55%\" top=\"55%\" style=\"font-size:1.8em; padding: 0.5em 1em; background-color: rgba(255, 255, 255, .5); backdrop-filter: blur(5px); box-shadow: 0 0 1rem 0 rgba(0, 0, 0, .5); border-radius: 5px;\" .fragment}\nStatistical Power\n:::\n\n---\n\n## Two errors\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|                                              |Hypothesis Testing                                                                                                                       |Power Analysis                                                                                                                                                  |\n|:---------------------------------------------|:----------------------------------------------------------------------------------------------------------------------------------------|:---------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|<b>Aim</b>                                    |Rule out that we observe something just by chance.                                                                                       |Ensure that we would find an effect.                                                                                                                            |\n|<b>Error question</b>                         |\"What are the chances that we find an effect at least this large in our sample, given that there is <b>no effect</b> in the population?\" |\"What are the chances that we <b>do not<b> find a statistically significant effect in our sample, although there is <b>a certain effect</b> in the population?\" |\n|<b>Typical threshold for acceptable error</b> |$\\alpha$ = 5 %                                                                                                                           |$\\beta$ = 20 %                                                                                                                                                  |\n\n\n:::\n:::\n\n\n\n# Statistical Power\n\n---\n\n## Statistical Power\n\nStatistical power is the probability of detecting an effect with a hypothesis test, *given a certain effect size*\n\n(Or $1 - \\beta$)\n\n---\n\n## Your turn #1: Calculating power\n\n1. Create your true effect world: Simulate a population with a true difference of -0.5 between action and comedy movies.\n\n2. Get your sampling distribution: Simulate 1000 random samples of size n = 1000 and store the results.\n\n3. Plot your Sampling distribution (use `data.frame()` to turn your vector into a data frame that can be read by `ggplot`)\n\n4. Prepare for hypothesis testing: bring the results on scale of the standard normal distribution (divide by the standard deviation of your distribution)\n\n5. Check the transformation: plot the new, standardized values\n\n6. Calculate your power: Check how many (standardized) differences are below the 5% threshold, i.e. smaller than or equal to -1.96 (hint: use `mutate()` in combination with `ifelse` to create a new variable `significant` that takes the values of `TRUE` or `FALSE`. Then use `summarize()` and `sum()` to calculate the share). Are you above the 80% power threshold? \n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_e94957c7\" data-update-every=\"1\" data-start-immediately=\"true\" tabindex=\"0\" style=\"right:0;bottom:0;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">15</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n---\n\n1. Create your true effect world: Simulate a population with a true difference of -0.5 between action and comedy movies.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# True effect world population\nimaginary_movies_true <- tibble(\n  movie_id = 1:1000000,\n  genre = sample(c(\"Comedy\", \"Action\"), size = 1000000, replace = TRUE),\n  rating = ifelse(\n    genre == \"Comedy\",\n    rtruncnorm(1000000, a = 1, b = 10, mean = 6.0, sd = 2), \n    rtruncnorm(1000000, a = 1, b = 10, mean = 5.5, sd = 2)   \n  )\n)\n```\n:::\n\n\n\n---\n\n\n\n2. Get your sampling distribution: Simulate 1000 random samples of size n = 1000 and store the results.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nn_simulations <- 1000\ndifferences <- c() # make an empty vector\nsample_size <- 1000\n\ndata <- imaginary_movies_true # replace with imaginary_movies_null\n\nfor (i in 1:n_simulations) {\n  # draw a sample of films\n  imaginary_sample <- data |> \n    sample_n(sample_size)\n  # compute rating difference in the sample\n  estimate <- imaginary_sample |> \n    group_by(genre) |> \n    summarize(avg_rating = mean(rating)) |> \n    summarise(diff = avg_rating[genre == \"Action\"] - avg_rating[genre == \"Comedy\"]) %>%\n    pull(diff)\n  \n  differences[i] <- estimate\n}\n```\n:::\n\n\n\n---\n\n\n\n3. Plot your Sampling distribution (use `data.frame()` to turn your vector into a data frame that can be read by `ggplot`)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(differences), aes(x = differences)) +\n  geom_histogram() +\n  labs(title = \"Sampling Distribution of Rating Differences\",\n       x = \"Mean Rating Difference (Action - Comedy)\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n4. Prepare for hypothesis testing: bring the results on scale of the standard normal distribution (divide by the standard deviation of your distribution)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndifferences_standardized <- differences/sd(differences)\n```\n:::\n\n\n\n---\n\n\n\n5. Check the transformation: plot the new, standardized values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data.frame(differences_standardized), aes(x = differences_standardized)) +\n  geom_histogram() +\n  labs(title = \"Sampling Distribution of Rating Differences\",\n       x = \"Mean Rating Difference (Action - Comedy)\",\n       y = \"Frequency\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n6. Calculate your power: Check how many (standardized) differences are below the 5% threshold, i.e. smaller than or equal to -1.96 (hint: use `mutate()` in combination with `ifelse` to create a new variable `significant` that takes the values of `TRUE` or `FALSE`. Then use `summarize()` and `sum()` to calculate the share). Are you above the 80% power threshold? \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata.frame(differences_standardized) |> \n  mutate(significant = ifelse(differences_standardized <= -1.96, TRUE, FALSE)) |> \n  summarize(sum_significant = sum(significant), \n            # you can also calculate the share directly\n            share_significant = sum(significant) / n()\n            )\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n  sum_significant share_significant\n1             975             0.975\n```\n\n\n:::\n:::\n\n\n\n# A power simulation \n\n---\n\n## The central limit theorem (again)\n\nThe larger the sample size, the more statistical power\n\n:::: r-stack\n\n:::{.fragment}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-36-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::{.fragment}\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-37-1.png){width=960}\n:::\n:::\n\n\n:::\n\n:::{.fragment}\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](06-slides_files/figure-revealjs/unnamed-chunk-38-1.png){width=960}\n:::\n:::\n\n\n:::\n\n::::\n\n# An example of a power analysis\n\nFor an example, head over to the [guide on power analysis](../guides/power_simulation.qmd) on the course website.\n\n---\n\nThat's it for today :)\n\n\n\n\n\n",
    "supporting": [
      "06-slides_files/figure-revealjs"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}