{
  "hash": "d403981a678c27c330b8b389fbdd8361",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Data visualization\"\nformat: \n  revealjs:\n    theme: simple\n    smaller: true\n    slide-number: true\n    # incremental: true\n    # code-link: true\n    chalkboard: true\n    history: false\n---\n\n::: {.cell}\n\n:::\n\n\n\n## Overview\n\n::::: columns\n::: {.column style=\"font-size: smaller;\"}\n1.  **The `ggplot` function**\n\n2.  **Mapping data to aesthetics**\n\n3.  **Different geoms**\n\n4.  **Scales**\n\n:::\n\n::: {.column style=\"font-size: smaller;\"}\n5.  **Facets**\n\n6.  **Coordinates**\n\n7.  **Themes**\n:::\n:::::\n\n# The `ggplot` function\n\n---\n\n::::::: columns\n:::: {.column width=\"50%\"}\n::: r-stack\n`tidyverse`{.fragment .fade-out fragment-index=\"1\"}\n\n`ggplot`{.fragment .fade-in fragment-index=\"1\"}\n:::\n::::\n\n:::: {.column width=\"50%\"}\n::: r-stack\n![](images/tidyverse.png){.fragment .semi-fade-out width=\"500\" fragment-index=\"1\"}\n\n![](images/ggplot.png){.fragment .fade-in .absolute fragment-index=\"1\" width=\"200\" top=\"40\" right=\"250\"}\n:::\n::::\n:::::::\n\n---\n\n## The `ggplot()` function\n\n::::::: columns\n:::: {.column width=\"70%\"}\n\n`ggplot()` from the `ggplot2` package is what we're gonna use for all our plots\n\nIt takes the following core arguments:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data, aes()) + geometry + other_stuff\n```\n:::\n\n\n\n- **Data**: the values to plot\n- **Mapping** (aes, for aesthetics): the structure of the plot\n- **Geometry**: the type of plot\n\n:::{.fragment}\nYou can also use a pipe\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndata |> \nggplot(aes()) + geometry + other_stuff\n```\n:::\n\n\n:::\n\n::::\n\n:::: {.column width=\"30%\"}\n\n![](images/ggplot.png){width=\"300\"}\n::::\n:::::::\n\n---\n\n## The `ggplot()` function\n\nTake for instance the gapminder data you've previously installed.\n\n\n\n::: {.cell}\n\n```{.r .cell-code .code-overflow-wrap}\nlibrary(gapminder)\n\n# The data() function in R is used to list, load, \n# and access built-in or package-provided datasets. \ndata(gapminder) \n```\n:::\n\n\n\nLet's get a quick overview of the data again.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(gapminder)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 6 Ã— 6\n  country     continent  year lifeExp      pop gdpPercap\n  <fct>       <fct>     <int>   <dbl>    <int>     <dbl>\n1 Afghanistan Asia       1952    28.8  8425333      779.\n2 Afghanistan Asia       1957    30.3  9240934      821.\n3 Afghanistan Asia       1962    32.0 10267083      853.\n4 Afghanistan Asia       1967    34.0 11537966      836.\n5 Afghanistan Asia       1972    36.1 13079460      740.\n6 Afghanistan Asia       1977    38.4 14880372      786.\n```\n\n\n:::\n:::\n\n\n\n---\n\n## What's the relationship between life expectancy and GDP per capita?\n\n<br>\n\n<br>\n\n... we expect of course that higher GDP per capita leads to greater life expactancy.\n\n---\n\n## What's the relationship between life expectancy and GDP per capita?\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n- We first assign the gapminder data to `ggplot()`\n\n- The result is just an empty plot\n\n::::\n\n:::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder)\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-6-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## What's the relationship between life expectancy and GDP per capita?\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n- Next, we map out the plot by adding the x and y axes\n\n::::\n\n:::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp))\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-7-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## What's the relationship between life expectancy and GDP per capita?\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n- We then define how we want to plot our data\n- In this case, let's go for the raw data points\n\n::::\n\n:::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-8-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## Mapping data to aesthetics\n\nSo far, only two variables appear in our plot (mapped onto the x and the y axis)\n\n<br>\n\nBut we can add more variables to the plot, by assigning them to certain asthetics\n\n---\n\n## Mapping data to aesthetics\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n- For example, we can display the variable continent as colors\n\n::::\n\n:::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-9-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## Mapping data to aesthetics\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n- For example, we can display the variable continent as colors\n\n- Note that a legend gets added automatically to the plot\n\n::::\n\n:::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-10-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## Mapping data to aesthetics\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n- We could further display population size by mapping it to the size aesthetic \n\n::::\n\n:::: {.column width=\"70%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"3\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-11-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## Grammatical Layers\n\n::::::: columns\n:::: {.column width=\"50%\"}\n\nSo far we know about data, aesthetics, and geometries\n\n<br>\n\nThink of these components as **layers**\n\n<br>\n\nWe add them to foundational `ggplot()` with `+`\n\n::::\n\n:::: {.column width=\"50%\"}\n\n![](images/ggplot-layers-short@4x.png)\n\n::::\n:::::::\n\n---\n\n## Possible aesthetics\n\n::::::: columns\n:::: {.column width=\"30%\"}\n\n`color` (discrete)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/aes-color-discrete-1.png){width=100%}\n:::\n:::\n\n\n\n`color` (continuous)\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/aes-color-continuous-1.png){width=100%}\n:::\n:::\n\n\n\n::::\n\n:::: {.column width=\"30%\"}\n\n`size`\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/aes-size-1.png){width=100%}\n:::\n:::\n\n\n\n`fill`\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/aes-fill-1.png){width=100%}\n:::\n:::\n\n\n\n::::\n\n:::: {.column width=\"30%\"}\n\n`shape`\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/aes-shape-1.png){width=100%}\n:::\n:::\n\n\n\n`alpha`\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/aes-alpha-1.png){width=100%}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## Possible geoms\n\n<table>\n  <tr>\n    <th class=\"cell-left\"></th>\n    <th class=\"cell-left\">Example geom</th>\n    <th class=\"cell-left\">What it makes</th>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><img src=\"images/geom_bar.png\"></td>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">geom_col()</code></td>\n    <td class=\"cell-left\">Bar charts</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><img src=\"images/geom_text.png\"></td>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">geom_text()</code></td>\n    <td class=\"cell-left\">Text</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><img src=\"images/geom_point.png\"></td>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">geom_point()</code></td>\n    <td class=\"cell-left\">Points</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><img src=\"images/geom_boxplot.png\"></td>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">geom_boxplot()</code>&emsp;</td>\n    <td class=\"cell-left\">Boxplots</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><img src=\"images/geom_sf.png\"></td>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">geom_sf()</code></td>\n    <td class=\"cell-left\">Maps</td>\n  </tr>\n</table>\n\n---\n\n## Possible geoms\n\nThere are dozens of possible geoms and<br>each class session will cover different ones.\n\n<br>\n\nSee [the {ggplot2} documentation](https://ggplot2.tidyverse.org/reference/index.html#section-layer-geoms) for complete examples of all the different geom layers\n\n---\n\n## Additional Layers\n\n::::::: columns\n:::: {.column width=\"40%\"}\n\nThere are many of other grammatical layers we can use to describe graphs!\n\nWe sequentially add layers onto the foundational `ggplot()` plot to create complex figures\n\n::::\n\n:::: {.column width=\"60%\"}\n\n![](images/ggplot-layers@4x.png)\n\n::::\n:::::::\n\n---\n\n## Scales\n\nScales change how variables are mapped\n\n<table>\n  <tr>\n    <th class=\"cell-left\">Example layer</th>\n    <th class=\"cell-left\">What it does</th>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">scale_x_continuous()</code></td>\n    <td class=\"cell-left\">Make the x-axis continuous</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">scale_x_continuous(breaks = 1:5)&ensp;</code></td>\n    <td class=\"cell-left\">Manually specify axis ticks</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">scale_x_log10()</code></td>\n    <td class=\"cell-left\">Log the x-axis</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">scale_color_gradient()</code></td>\n    <td class=\"cell-left\">Use a gradient</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">scale_fill_viridis_d()</code></td>\n    <td class=\"cell-left\">Fill with discrete viridis colors</td>\n  </tr>\n</table>\n\n---\n\n## Scales\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-12-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Scales\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"5\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-13-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Scales\n\n\n\n::: {.cell .column-screen-inset output-location='column' output-width='150%'}\n\n```{.r .cell-code  code-line-numbers=\"6\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-14-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Facets\n\nFacets show subplots for different subsets of data\n\n<table>\n  <tr>\n    <th class=\"cell-left\">Example layer</th>\n    <th class=\"cell-left\">What it does</th>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">facet_wrap(vars(continent))</code></td>\n    <td class=\"cell-left\">Plot for each continent</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">facet_wrap(vars(continent, year))</code>&emsp;</td>\n    <td class=\"cell-left\">Plot for each continent/year</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">facet_wrap(..., ncol = 1)</code></td>\n    <td class=\"cell-left\">Put all facets in one column</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">facet_wrap(..., nrow = 1)</code></td>\n    <td class=\"cell-left\">Put all facets in one row</td>\n  </tr>\n</table>\n\n---\n\n## Facets\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() \n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-15-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Facets\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  facet_wrap(vars(continent))\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-16-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Facets\n\n::::::: columns\n:::: {.column width=\"40%\"}\n\n\n\n::: {.cell}\n\n```{.r .cell-code  code-line-numbers=\"2,9\"}\nggplot(data = gapminder |> \n         filter(year %in% c(2002, 2007)), \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  facet_wrap(vars(continent, \n                  year), nrow = 2)\n```\n:::\n\n\n\n::::\n\n:::: {.column width=\"60%\"}\n\n\n\n::: {.cell output-location='column'}\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-18-1.png){width=960}\n:::\n:::\n\n\n\n::::\n:::::::\n\n---\n\n## Coordinates \n\nChange the coordinate system\n\n<table>\n  <tr>\n    <th class=\"cell-left\">Example layer</th>\n    <th class=\"cell-left\">What it does</th>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">coord_cartesian()</code></td>\n    <td class=\"cell-left\">Plot for each continent</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">coord_cartesian(ylim = c(1, 10))</code>&emsp;</td>\n    <td class=\"cell-left\">Zoom in where y is 1â€“10</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">coord_flip()</code></td>\n    <td class=\"cell-left\">Switch x and y</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">coord_polar()</code></td>\n    <td class=\"cell-left\">Use circular polar system</td>\n  </tr>\n</table>\n\n---\n\n## Coordinates\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() \n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-19-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Coordinates\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7,8\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  coord_cartesian(ylim = c(70, 80), \n                  xlim = c(10000, 30000))\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-20-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Coordinates\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() + \n  coord_flip()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-21-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Labels\n\nAdd labels to the plot with a single `labs()` layer\n\n<table>\n  <tr>\n    <th class=\"cell-left\">Example layer</th>\n    <th class=\"cell-left\">What it does</th>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">labs(title = \"Neat title\")</code></td>\n    <td class=\"cell-left\">Title</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">labs(caption = \"Something\")</td>\n    <td class=\"cell-left\">Caption</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">labs(y = \"Something\")</td>\n    <td class=\"cell-left\">y-axis</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">labs(size = \"Population\")</code></td>\n    <td class=\"cell-left\">Title of size legend</td>\n  </tr>\n</table>\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() \n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-22-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"7\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-23-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"8\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-24-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"9\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-25-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"10\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-26-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"11\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-27-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"12\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-28-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"13\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\",\n       caption = \"Source: The Gapminder Project\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-29-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Theme\n\nChange the appearance of anything in the plot\n\nThere are many built-in themes\n\n<table>\n  <tr>\n    <th class=\"cell-left\">Example layer</th>\n    <th class=\"cell-left\">What it does</th>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">theme_grey()</code></td>\n    <td class=\"cell-left\">Default grey background</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">theme_bw()</td>\n    <td class=\"cell-left\">Black and white</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">theme_dark()</td>\n    <td class=\"cell-left\">Dark</td>\n  </tr>\n  <tr>\n    <td class=\"cell-left\"><code class=\"remark-inline-code\">theme_minimal()</code></td>\n    <td class=\"cell-left\">Minimal</td>\n  </tr>\n</table>\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\",\n       caption = \"Source: The Gapminder Project\")\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-30-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"14\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\",\n       caption = \"Source: The Gapminder Project\") +\n  theme_dark()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-31-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"14\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\",\n       caption = \"Source: The Gapminder Project\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-32-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Theme\n\nThere are collections of pre-built themes online,<br>like [the {ggthemes} package](https://jrnold.github.io/ggthemes/)\n\n![](images/ggthemes.png)\n\n---\n\n## Theme\n\nOrganizations often make their own custom themes, [like the BBC](https://bbc.github.io/rcookbook/)\n\n![](images/bbc-cookbook.png)\n\n---\n\n## Theme options\n\nMake theme adjustments with `theme()`\n\nThere are a billion options here!\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\",\n       caption = \"Source: The Gapminder Project\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-33-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Theme options\n\nMake theme adjustments with `theme()`\n\nThere are a billion options here!\n\n\n\n::: {.cell output-location='column'}\n\n```{.r .cell-code  code-line-numbers=\"13-17\"}\nggplot(data = gapminder, \n       mapping = aes(x = gdpPercap, y = lifeExp, color = continent, \n                     size = pop)) +\n  geom_point() +\n  scale_x_log10() +\n  scale_color_viridis_d() +\n  labs(title = \"Health and wealth grow together\",\n       subtitle = \"Data from the world\",\n       x = \"Wealth (GDP per capita)\",\n       y = \"Health (life expectancy)\",\n       color = \"Continent\",\n       size = \"Population\",\n       caption = \"Source: The Gapminder Project\") +\n  theme_minimal() +\n  theme(legend.position = \"top\",\n        plot.title = element_text(face = \"bold\"),\n        axis.title.y = element_text(face = \"italic\"))\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-34-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## There are many, many more options\n\n::::::: columns\n:::: {.column width=\"40%\"}\n\nSee [the {ggplot2} documentation](https://ggplot2.tidyverse.org/reference/index.html) for complete examples of everything you can do\n\n::::\n\n:::: {.column width=\"60%\"}\n\n![](images/ggplot-layers@4x.png)\n\n::::\n:::::::\n\n---\n\n## Your turn #1: untidy temperatures \n\nTake this [tibble](https://tibble.tidyverse.org/){target=\"_blank\"} (very similar to a `data.frame`) of temperature recordings at three stations on three dates:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp_data_untidy <- tribble(\n  ~date, ~station1, ~station2,  ~station3,\n  \"2023-10-01\", 30.1, 29.8,  31.2,\n  \"2023-11-01\", 28.6, 29.1,  33.4,\n  \"2023-12-01\", 29.9, 28.5,  32.3\n)\n```\n:::\n\n\n\nImagine our goal is to track temperature across time.\n\n---\n\n## Your turn #1: untidy temperatures \n\n1. What makes this data untidy? Describe.\n\n2. Make a new data frame called `temp_data_tidy`. Use `pivot_longer()` to tidy the data and create a new `temperature` and `station` variable. \n\n3. Make a plot that tracks the temperature changes over time for `station1` only. Use `filter()` to select the station and use `mutate()` in combination with the `as_date()` function to convert the date variable from character to a date format. into a date. Use `geom_line` for the plot. \n\n4. Now use the the non-filtered data frame with all stations. Add another aesthetic layer to your previous plot, so that your new plot allows to differentiate temperature changes between the different stations. Tip: Use `color`\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"countdown\" id=\"timer_7a1bf2b3\" data-update-every=\"1\" data-start-immediately=\"true\" tabindex=\"0\" style=\"top:0;right:0;font-size:1em;\">\n<div class=\"countdown-controls\"><button class=\"countdown-bump-down\">&minus;</button><button class=\"countdown-bump-up\">&plus;</button></div>\n<code class=\"countdown-time\"><span class=\"countdown-digits minutes\">06</span><span class=\"countdown-digits colon\">:</span><span class=\"countdown-digits seconds\">00</span></code>\n</div>\n```\n\n:::\n:::\n\n\n\n---\n\n## Your turn #1: untidy temperatures \n\n1.&nbsp; What makes this data untidy? Describe.\n\n:::: columns\n\n::: column\n![](images/tidy-1.png){width=\"800\"}\n\n1.  Variables are columns\n2.  Observations are rows\n3.  Values are cells\n:::\n\n::: column\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|date       | station1| station2| station3|\n|:----------|--------:|--------:|--------:|\n|2023-10-01 |     30.1|     29.8|     31.2|\n|2023-11-01 |     28.6|     29.1|     33.4|\n|2023-12-01 |     29.9|     28.5|     32.3|\n\n\n:::\n:::\n\n\n\n::: fragment\n**Multiple observations (temperature recordings) per row**\n:::\n\n:::\n\n::::\n\n---\n\n## Your turn #1: untidy temperatures \n\n2. Make a new data frame called `temp_data_tidy`. Use `pivot_longer()` to tidy the data and create a new `temperature` and `station` variable. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp_data_tidy <- temp_data_untidy |> \n  pivot_longer(cols = starts_with(\"station\"),\n               names_to = \"station\",\n               values_to = \"temperature\")\n```\n:::\n\n::: {.cell}\n::: {.cell-output-display}\n\n\n|date       |station  | temperature|\n|:----------|:--------|-----------:|\n|2023-10-01 |station1 |        30.1|\n|2023-10-01 |station2 |        29.8|\n|2023-10-01 |station3 |        31.2|\n|2023-11-01 |station1 |        28.6|\n|2023-11-01 |station2 |        29.1|\n|2023-11-01 |station3 |        33.4|\n|2023-12-01 |station1 |        29.9|\n|2023-12-01 |station2 |        28.5|\n|2023-12-01 |station3 |        32.3|\n\n\n:::\n:::\n\n\n\n---\n\n## Your turn #1: untidy temperatures \n\n3. Make a plot that tracks the temperature changes over time for `station1` only. Use `filter()` to select the station and use `mutate()` in combination with the `as_date()` function to convert the date variable from character to a date format. into a date. Use `geom_line` for the plot. \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp_data_tidy |> \n  filter(station == \"station1\") |> \n  mutate(date = as_date(date)) |> \n  ggplot(aes(x = date, y = temperature)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-40-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## Your turn #1: untidy temperatures \n\n4. Now use the the non-filtered data frame with all stations. Add another aesthetic layer to your previous plot, so that your new plot allows to differentiate temperature changes between the different stations. Tip: Use `color`\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntemp_data_tidy |> \n  mutate(date = as_date(date)) |> \n  ggplot(aes(x = date, y = temperature, color = station)) +\n  geom_line()\n```\n\n::: {.cell-output-display}\n![](04-slides_files/figure-revealjs/unnamed-chunk-41-1.png){width=960}\n:::\n:::\n\n\n\n---\n\n## That's it for today :)\n\n\n\n",
    "supporting": [
      "04-slides_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../site_libs/countdown-0.4.0/countdown.css\" rel=\"stylesheet\" />\n<script src=\"../site_libs/countdown-0.4.0/countdown.js\"></script>\n"
      ],
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}